<Page x:Class="Client.Pages.Main"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Client.Pages"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:ui="clr-namespace:Client.ViewModels"
		xmlns:converters="clr-namespace:Client.Converters"
		xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
		xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="1000"
      Title="Page1">

	<Page.DataContext>
		<ui:MainViewModel/>
	</Page.DataContext>
	<Page.Resources>
		<converters:BooleanToVisibilityConverter x:Key="ConverterBoolean"></converters:BooleanToVisibilityConverter>
		<converters:BooleanToEnableConverter x:Key="BooleanToEnableConverter"/>
		<converters:ClientTypeToVisibilityConverter x:Key="ClientTypeToVisibility"></converters:ClientTypeToVisibilityConverter>
		<converters:SubStringKeyConverter x:Key="SubStringKey"></converters:SubStringKeyConverter>
	</Page.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="300*"/>
			<ColumnDefinition Width="257*"/>
			<ColumnDefinition Width="243*"/>
			<ColumnDefinition Width="100*"/>
			<ColumnDefinition Width="100*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="0.7*"/>
			<RowDefinition Height="0.5*"/>
			<RowDefinition Height="0.5*"/>
			<RowDefinition Height="0.5*"/>
			<RowDefinition Height="0.5*"/>
			<RowDefinition Height="5*"/>
		</Grid.RowDefinitions>
		<Button x:Name="button"
					  Style="{StaticResource btn-primary}"				 
					  Command="{Binding Path=ConnectClick}"
					  Grid.Column="0" Grid.Row="0"				  
					  HorizontalAlignment="Stretch" Margin="5,5,5,5" VerticalAlignment="Stretch" MinHeight="0" MinWidth="0" Grid.RowSpan="1">

				<StackPanel Orientation="Horizontal">
					<icons:PackIconFontAwesome Kind="PlugSolid" ></icons:PackIconFontAwesome>
					<TextBlock Text="{Binding Path=TextButtonConect}"></TextBlock>
				</StackPanel>

			</Button>
			<Grid Grid.Row="1" x:Name="GridClient">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.5*"/>
					<ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="1*"/>
				</Grid.RowDefinitions>
				<Label Content="Client Type"></Label>
				<ComboBox x:Name="comboBoxClient" HorizontalAlignment="Stretch" IsEnabled="{Binding Path=isConnected,Converter={StaticResource BooleanToEnableConverter},Mode=TwoWay}" ItemsSource="{Binding Path=ListClients}"  SelectedItem="{Binding Path=SelectedClient}" Margin="3" Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" MinWidth="120"/>
			</Grid>
			<Grid Grid.Row="2" x:Name="GridLabel">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.5*"/>
					<ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="1*"/>
				</Grid.RowDefinitions>
				<Label Content="Server IP"></Label>
				<TextBox x:Name="textboxIP" 
							IsEnabled="{Binding Path=isConnected,Converter={StaticResource BooleanToEnableConverter}}"
							Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2" Text="{Binding IpAddress,UpdateSourceTrigger=PropertyChanged}" ></TextBox>
			</Grid>
		<Grid Grid.Row="3"
				Visibility="{Binding Path=SelectedClient, Converter={StaticResource ClientTypeToVisibility} ,ConverterParameter=UAModbuss}"
				x:Name="GridPort">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.5*" />
				<ColumnDefinition Width="1*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="1*" />
			</Grid.RowDefinitions>
			<Label Content="Port "></Label>
			<TextBox x:Name="textboxPort"
						IsEnabled="{Binding Path=isConnected,Converter={StaticResource BooleanToEnableConverter}}"
						Grid.Row="1"
						Grid.Column="1"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Margin="2"
						Text="{Binding Port,UpdateSourceTrigger=PropertyChanged}"></TextBox>
		</Grid>
		<Grid Grid.Row="3" x:Name="GridCombo" Visibility="{Binding Path=SelectedClient, Converter={StaticResource ClientTypeToVisibility} ,ConverterParameter=OPCDA}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.5*"/>
					<ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="1*"/>
				</Grid.RowDefinitions>
				<Label Content="Server Name"></Label>

			<ComboBox x:Name="comboBox" HorizontalAlignment="Stretch"
							 IsEnabled="{Binding Path=isConnected,Converter={StaticResource BooleanToEnableConverter},Mode=TwoWay}"
							 ItemsSource="{Binding Path=ListServers}"
							 SelectedItem="{Binding Path=ServerSelected}"						 
							Margin="3" Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" MinWidth="120"/>
		</Grid>
			
		<Grid Grid.Row="4" x:Name="GridLabelFind">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.5*"/>
					<ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="1*"/>
					<!--<RowDefinition Height="1*"/>-->
				</Grid.RowDefinitions>
				<Label Content="Find: "	
						 Visibility="{Binding Path=SelectedClient, Converter={StaticResource ClientTypeToVisibility} ,ConverterParameter=MarcomDA}"
						 Grid.Column="0" Grid.Row="0" ></Label>
			<!--<TextBox x:Name="textBox" 
							Visibility="{Binding Path=SelectedClient, Converter={StaticResource ClientTypeToVisibility} ,ConverterParameter=MarcomDA}"
						IsEnabled="{Binding Path=isConnected}"				
						HorizontalAlignment="Stretch" Margin="3" TextWrapping="Wrap" Text="" VerticalAlignment="Top" MinWidth="0"  Grid.Column="1" Grid.Row="0"  MinHeight="23">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="TextChanged">
						<i:InvokeCommandAction Command="{Binding TxtChangeCommand}" CommandParameter="{Binding ElementName=textBox,Path=Text}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</TextBox>-->
		</Grid>

	<GroupBox Header="Items"  Grid.ColumnSpan="1" Grid.Row="4" Grid.RowSpan="4" >
			<Grid Grid.ColumnSpan="2" Grid.RowSpan="2" x:Name="GridModbusMarcom" Margin="5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.5*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="0.1*"/>
					<RowDefinition Height="1*"/>
				</Grid.RowDefinitions>

				<Grid Grid.ColumnSpan="2" Grid.RowSpan="2"
						IsEnabled="{Binding Path=isConnected}"
						Visibility="{Binding Path=SelectedClient, Converter={StaticResource ClientTypeToVisibility} ,ConverterParameter=Modbus}" 
						>
					<Grid.RowDefinitions>
						<RowDefinition Height="0.5*"></RowDefinition>
						<RowDefinition Height="1*"></RowDefinition>
						<RowDefinition Height="0.5*"></RowDefinition>
						<RowDefinition Height="2*"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"></ColumnDefinition>
						<ColumnDefinition Width="1*"></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<Label Content="Adress: "  Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" ></Label>
					<TextBox Grid.Column="1"  Grid.Row="0" Margin="5" Text="{Binding ModbusAddress,UpdateSourceTrigger=PropertyChanged}" ></TextBox>
					<StackPanel Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
						<RadioButton Grid.Column="0" Grid.Row="1" GroupName="modbus" Content="Coil" Command="{Binding ModBusTypeRadioButtonCommand}" CommandParameter="Coils" Background="Transparent"/>
						<RadioButton Grid.Column="0" Grid.Row="1" GroupName="modbus" Content="Discrete Inputs" Command="{Binding ModBusTypeRadioButtonCommand}" CommandParameter="DiscreteInputs" Background="Transparent" />
						<RadioButton Grid.Column="0" Grid.Row="1" GroupName="modbus" Content="Holding Register" Command="{Binding ModBusTypeRadioButtonCommand}" CommandParameter="HoldingRegister" Background="Transparent" />
						<RadioButton Grid.Column="0" Grid.Row="1" GroupName="modbus" Content="Input Register" Command="{Binding ModBusTypeRadioButtonCommand}" CommandParameter="InputRegister" Background="Transparent"/>
					</StackPanel>
					<Button Grid.Column="1" 
							  Command="{Binding AddModbusCommand}"								  
							  Style="{StaticResource btn-primary}"
								  
							  CommandParameter="{Binding ModbusAddress}" Grid.Row="1" Margin="30,10,40,10">
						<StackPanel Orientation="Horizontal">
							<icons:PackIconFontAwesome Kind="PlusSolid"  ></icons:PackIconFontAwesome>
							<TextBlock Text=""></TextBlock>
						</StackPanel>
					</Button>
				</Grid>
				
				
				<StackPanel ScrollViewer.VerticalScrollBarVisibility="Visible"  Visibility="{Binding Path=SelectedClient, Converter={StaticResource ClientTypeToVisibility} ,ConverterParameter=UAOPCDA}" 
					Background="White" Grid.ColumnSpan="2" Grid.RowSpan="2">
					<DockPanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
						<icons:PackIconFontAwesome Kind="SearchSolid" HorizontalAlignment="Center" VerticalAlignment="Center" ></icons:PackIconFontAwesome>
					<TextBox x:Name="TextBoxOPCDAItems"
								Height="auto"
								MinHeight="23"
								IsEnabled="{Binding Path=isConnected}"
								Margin="4" TextWrapping="Wrap"
								Text="{Binding Path=TextFilteritems,Mode=TwoWay}"
								VerticalAlignment="Stretch"
								HorizontalAlignment="Stretch"
								FontSize="18"
								FontFamily="Arial"
								MinWidth="0">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="TextChanged">
									<i:InvokeCommandAction Command="{Binding TextChangeFilterItemsCommand}" CommandParameter="{Binding ElementName=TextBoxOPCDAItems,Path=Text}" />
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</TextBox>
					</DockPanel>
			
						
					<TreeView x:Name="TreeView"  		
								 MaxHeight="280"
								 ItemsSource="{Binding TreeListItems,UpdateSourceTrigger=PropertyChanged}"
					 VirtualizingStackPanel.IsVirtualizing="True"
					 VirtualizingStackPanel.VirtualizationMode="Recycling"
					 HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
					<TreeView.ItemTemplate>
						<HierarchicalDataTemplate ItemsSource="{Binding Path=Value}" >
							<TextBlock Foreground="Black" >
									<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
										<icons:PackIconFontAwesome Kind="FolderMinusSolid" Foreground="DarkOrange" Margin="0,5,0,0" ></icons:PackIconFontAwesome>
										<Label Content="{Binding Path=Key}" VerticalContentAlignment="Center"></Label>										
									</StackPanel>
								</TextBlock>
						
							<HierarchicalDataTemplate.ItemTemplate>
								<DataTemplate>
									<TextBlock >
									<icons:PackIconFontAwesome Kind="TagSolid" Foreground="Gray" Margin="0,5,0,0" ></icons:PackIconFontAwesome>
									<Label Content="{Binding Name , Converter={StaticResource SubStringKey},ConverterParameter=Key}"></Label>							
									</TextBlock>
								</DataTemplate>
							</HierarchicalDataTemplate.ItemTemplate>
						</HierarchicalDataTemplate>
					</TreeView.ItemTemplate>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="MouseDoubleClick" >
							<i:InvokeCommandAction Command="{Binding Path=DoubleClick}" CommandParameter="{Binding ElementName=TreeView,Path=SelectedItem}"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</TreeView>
	
					
				</StackPanel>

			</Grid>
			</GroupBox>
		
		
		
		<GroupBox x:Name="GroupBoxTabItems" Header="Items"  Grid.Column="1" Grid.RowSpan="6" Grid.ColumnSpan="4" Margin="5">
			
		<TabControl  x:Name="tabControl"
						 FontFamily="Arial"
						 FontSize="12"
						 FontWeight="Light"
						 MinHeight="0" 
						 Margin="0,0,0,0"
							 IsEnabled="{Binding isConnected}"
							 VerticalAlignment="Stretch"
						 HorizontalAlignment="Stretch"
						 MinWidth="0" >
			<TabItem >
				<TabItem.Header>
					<TextBlock Text="Items" FontSize="18" />
				</TabItem.Header>
				<Grid IsEnabled="{Binding isConnected}">
						<Grid.RowDefinitions>
							<RowDefinition Height="1.3*"/>
							<RowDefinition Height="12*"/>
					</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.5*"/>
							<ColumnDefinition Width="1*"/>
							<ColumnDefinition Width="2*"/>
							<ColumnDefinition Width="0.5*"/>
							<ColumnDefinition Width="0.5*"/>
							<ColumnDefinition Width="0.5*"/>
							<ColumnDefinition Width="0.5*"/>
							<ColumnDefinition Width="0.5*"/>
						</Grid.ColumnDefinitions>
						<icons:PackIconFontAwesome Kind="SearchSolid" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" ></icons:PackIconFontAwesome>

					<TextBox x:Name="TextBoxItemsActive"
								HorizontalAlignment="Stretch"
								MinHeight="23"
								IsEnabled="{Binding Path=isConnected}"
								Margin="4" TextWrapping="Wrap"
								Text="{Binding Path=TextTable,Mode=TwoWay}"
								VerticalAlignment="Stretch"
								FontSize="18"
								FontFamily="Arial"
								MinWidth="0" Grid.ColumnSpan="2"
								Grid.Column="1"
								Grid.Row="0">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="TextChanged">
									<i:InvokeCommandAction Command="{Binding TextChangeItemsActive}" CommandParameter="{Binding ElementName=TextBoxItemsActive,Path=Text}" />
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</TextBox>
					<Button x:Name="button2"
							  ToolTip="Delete"
							  Style="{StaticResource btn-warning}"
							  IsEnabled="{Binding Path=isConnected}"
							  Command="{Binding Path=ButtonRemoveItem}"							 
							   MaxWidth="50"
							  MaxHeight="50"
							  CommandParameter="{Binding ElementName=dataGrid2,Path=SelectedItem}"
							  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2" MinWidth="0" MinHeight="0"  Grid.Column="3" Grid.Row="0"   >
						<StackPanel Orientation="Horizontal">
								<icons:PackIconFontAwesome Kind="EraserSolid" >
							</icons:PackIconFontAwesome>
							<!--<TextBlock Text="Remove"></TextBlock>-->
						</StackPanel>
					</Button>
					<Button x:Name="button1" ToolTip="Delete All"
							   MaxWidth="50"
							  MaxHeight="50"
							  Style="{StaticResource btn-danger}" IsEnabled="{Binding Path=isConnected}"
							  Command="{Binding Path=ButtonRemoveAll}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="0" MinHeight="0"
							  Margin="2" Grid.Column="4" Grid.Row="0" >
						<StackPanel Orientation="Horizontal">
								<icons:PackIconFontAwesome Kind="TrashAltSolid" ></icons:PackIconFontAwesome>
								<!--<TextBlock Text="RemoveAll"></TextBlock>-->
						</StackPanel>
					</Button>
					<Button x:Name="buttonSave"
							   MaxWidth="50"
							  MaxHeight="50"
							  ToolTip="Save in file"  Style="{StaticResource btn-success}" IsEnabled="{Binding Path=isConnected}" Command="{Binding Path=ButtonSave}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="0" MinHeight="0" Margin="2" Grid.Column="5" Grid.Row="0" >
						<StackPanel Orientation="Horizontal">
							<icons:PackIconFontAwesome Kind="SaveRegular" ></icons:PackIconFontAwesome>
							<!--<TextBlock Text="Save"></TextBlock>-->
						</StackPanel>
					</Button>
					<Button x:Name="buttonLoad"
							   MaxWidth="50"
							  MaxHeight="50"
							  ToolTip="Load from file"  Style="{StaticResource btn-info}" IsEnabled="{Binding Path=isConnected}"  Command="{Binding Path=ButtonLoad}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="0" MinHeight="0" Margin="2" Grid.Column="6" Grid.Row="0" >
						<StackPanel Orientation="Horizontal">
							<icons:PackIconFontAwesome Kind="UploadSolid" ></icons:PackIconFontAwesome>
							<!--<TextBlock Text="Load"></TextBlock>-->
						</StackPanel>

					</Button>



						<StackPanel Grid.Column="7" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
							<RadioButton GroupName="filetype" Content="XML" Command="{Binding FileTypeCommand}" CommandParameter="XML" />
							<RadioButton GroupName="filetype" Content="JSON" Command="{Binding FileTypeCommand}" CommandParameter="JSON" />
						</StackPanel>
						
					
					<DataGrid x:Name="dataGrid2"
								 RowStyle="{StaticResource RowStyleWithAlternation}"
								 CanUserAddRows="False"
								 ItemsSource="{Binding Path=ListOfItemsActive,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
								 AutoGenerateColumns="False"
								ColumnWidth="*"
								 IsReadOnly="True"
								 CanUserDeleteRows="False"
								 RowHeight="50"
								 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="10,4,10,30" Grid.ColumnSpan="9" Grid.Row="1" >
						<DataGrid.InputBindings>
							<MouseBinding
										MouseAction="LeftDoubleClick"
										Command="{Binding UpdateElement}"
										CommandParameter="{Binding ElementName=dataGrid2,Path=SelectedItem}"/>
						</DataGrid.InputBindings>

						<DataGrid.Columns>
							<DataGridTextColumn Header="ItemID" Binding="{Binding ItemID}" />
							<DataGridTextColumn Header="DataType" Binding="{Binding DataType}"/>
							<DataGridTextColumn Header="Item Type" Binding="{Binding ItemType}"/>
							<DataGridTextColumn Header="Value" Binding="{Binding Value}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</TabItem>
		</TabControl>
		</GroupBox>
	
		<mah:ProgressRing  Visibility="{Binding Path=IsBusy, Converter={StaticResource ConverterBoolean},Mode=TwoWay}"
			Grid.Column="0" Grid.Row="1" Grid.RowSpan="5" Grid.ColumnSpan="1" Width="100" 
                  IsActive="True">
		</mah:ProgressRing>
	</Grid>

</Page>
